<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Todo List</title>
    <link rel="stylesheet" href="styles.css"> <!-- CSS file link -->
    <style>
    body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

.todo-container {
    background-color: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    width: 300px;
}

h1 {
    text-align: center;
    margin-bottom: 20px;
}

input {
    width: calc(100% - 20px);
    padding: 10px;
    font-size: 16px;
    margin-bottom: 10px;
    border-radius: 5px;
    border: 1px solid #ccc;
}

button {
    width: 100%;
    padding: 10px;
    font-size: 16px;
    background-color: #28a745;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

button:hover {
    background-color: #218838;
}

ul {
    list-style: none;
    padding: 0;
}

li {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px;
    background-color: #f8f9fa;
    margin-bottom: 10px;
    border-radius: 5px;
}

li span {
    flex-grow: 1;
}

li button {
    margin-left: 10px;
    background-color: #007bff;
}

li button:hover {
    background-color: #0056b3;
}

    </style>
</head>
<body>
    <div class="todo-container">
        <h3> Todo-List</h3>
        
        <!-- Input field and add button -->
        <input type="text" id="taskInput" placeholder="Add a new task" />
        <button id="addButton">Add Task</button>

        <!-- Display tasks -->
        <ul id="taskList"></ul>
    </div>

    <script src="script.js"></script> <!-- JavaScript file link -->
    <script>
// Function to get tasks from LocalStorage (if any)
function getTasks() {
    const tasks = JSON.parse(localStorage.getItem('tasks')) || []; // Get tasks or create an empty array
    return tasks;
}

// Function to save tasks to LocalStorage
function saveTasks(tasks) {
    localStorage.setItem('tasks', JSON.stringify(tasks)); // Save tasks to LocalStorage
}

// Function to render tasks on the page using a loop
function renderTasks() {
    const tasks = getTasks(); // Get the tasks from LocalStorage
    const taskList = document.getElementById('taskList'); // Get the <ul> element
    taskList.innerHTML = ''; // Clear the existing task list first

    // Loop through the tasks array and create a <li> for each task
    for (let i = 0; i < tasks.length; i++) {
        const task = tasks[i]; // Get the current task
        const li = document.createElement('li'); // Create a new <li> element
        li.innerHTML = `
            <span>${task}</span>
            <button onclick="editTask(${i})">Edit</button>
            <button onclick="deleteTask(${i})">Delete</button>
        `;
        taskList.appendChild(li); // Add the new <li> to the task list
    }
}

// Function to add a new task
function addTask() {
    const taskInput = document.getElementById('taskInput'); // Get the input field
    const taskText = taskInput.value.trim(); // Get the task text and trim any spaces

    if (taskText === '') {
        alert('Please enter a task!');
        return;
    }

    const tasks = getTasks(); // Get current tasks from LocalStorage
    tasks.push(taskText); // Add the new task to the tasks array
    saveTasks(tasks); // Save updated tasks to LocalStorage
    renderTasks(); // Re-render the tasks
    taskInput.value = ''; // Clear the input field
}

// Function to edit a task
function editTask(index) {
    const tasks = getTasks(); // Get current tasks
    const newTask = prompt('Edit task:', tasks[index]); // Prompt the user to edit the task

    if (newTask !== null && newTask.trim() !== '') {
        tasks[index] = newTask; // Update the task
        saveTasks(tasks); // Save updated tasks to LocalStorage
        renderTasks(); // Re-render the tasks
    }
}

// Function to delete a task
function deleteTask(index) {
    const tasks = getTasks(); // Get current tasks
    tasks.splice(index, 1); // Remove the task at the given index
    saveTasks(tasks); // Save updated tasks to LocalStorage
    renderTasks(); // Re-render the tasks
}

// Event listener for the "Add Task" button
document.getElementById('addButton').addEventListener('click', addTask);

// Initial rendering of tasks when the page loads
renderTasks();

    </script>
</body>
</html>
